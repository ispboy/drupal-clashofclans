<?php

/**
 * @file
 * Provides a leaguegroup entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\clashofclans_api\LeagueGroup;

/**
 * Implements hook_theme().
 */
function clashofclans_leaguegroup_theme() {
  return [
    'leaguegroup' => [
      'render element' => 'elements',
    ],

    'leaguegroup_data' => [
      'variables' => [
        'data' => NULL,
      ],
    ],

  ];
}

/**
 * Prepares variables for leaguegroup templates.
 *
 * Default template: leaguegroup.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the leaguegroup information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_leaguegroup(array &$variables) {
  foreach (Element::children($variables['elements']) as $key) {
    if ($key == 'data') {
      $weight = $variables['elements'][$key]['#weight'];
      $json = $variables['elements'][$key]['#items']->getString();
      $data = \Drupal\Component\Serialization\Json::decode($json);
      $build = [
        '#theme' => 'leaguegroup_data',
        '#data' => $data,
        '#weight' => $weight,
      ];
      $variables['content']['data'] = $build;
    } else {
      $variables['content'][$key] = $variables['elements'][$key];
    }
  }
}

/**
* hook_ENTITY_TYPE_presave
* to process data of the manual input.
**/
function clashofclans_leaguegroup_leaguegroup_presave(Drupal\Core\Entity\EntityInterface $entity) {
  $json = $entity->get('data')->getString();
  $data = \Drupal\Component\Serialization\Json::decode($json);
  $lg = \Drupal::service('clashofclans_api.leaguegroup');
  $data = $lg->processData($data);
  $json = \Drupal\Component\Serialization\Json::encode($data);
  $entity->set('data', $json);
}
